import React, { useState } from 'react';
import './App.css';

const App = () => {
  const [currentView, setCurrentView] = useState('home');
  const [selectedCategory, setSelectedCategory] = useState(null);
  const [selectedWork, setSelectedWork] = useState(null);

  // Content structure - Easy to modify later
  const screenplays = {
    films: [
      {
        id: 1,
        title: "L'Encre du Destin",
        synopsis: "Dans les couloirs d'une biblioth√®que ancestrale, une jeune archiviste d√©couvre des manuscrits qui pr√©disent l'avenir. Entre myst√®re et romance, elle doit choisir entre r√©v√©ler la v√©rit√© ou pr√©server le secret des mots qui fa√ßonnent le monde.",
        year: 2024,
        genre: "Fantastique Romantique",
        image: "https://images.unsplash.com/photo-1505682499293-233fb141754c",
        episodes: [
          { title: "Sc√©nario Principal", filename: "encre_du_destin.pdf" }
        ]
      },
      {
        id: 2,
        title: "M√©moires Perdues",
        synopsis: "Un √©crivain amn√©sique retrouve des fragments de romans qu'il aurait √©crits, mais qui racontent des √©v√©nements r√©els qu'il n'a jamais v√©cus. Une qu√™te introspective sur l'identit√© et le pouvoir de la cr√©ation litt√©raire.",
        year: 2024,
        genre: "Drame Psychologique",
        image: "https://images.unsplash.com/photo-1478720568477-152d9b164e26",
        episodes: [
          { title: "Sc√©nario Principal", filename: "memoires_perdues.pdf" }
        ]
      }
    ],
    series: [
      {
        id: 3,
        title: "La Maison des √âcrivains",
        synopsis: "Dans une r√©sidence d'artistes, cinq √©crivains de genres diff√©rents vivent sous le m√™me toit. Entre rivalit√©s cr√©atives, amiti√©s inattendues et projets collaboratifs, chaque √©pisode explore leur univers litt√©raire unique et leurs d√©fis personnels.",
        year: 2024,
        genre: "Com√©die Dramatique",
        image: "https://images.pexels.com/photos/7967591/pexels-photo-7967591.jpeg",
        episodes: [
          { title: "√âpisode 1: Nouveaux R√©sidents", filename: "maison_ecrivains_ep1.pdf" },
          { title: "√âpisode 2: Syndrome de la Page Blanche", filename: "maison_ecrivains_ep2.pdf" },
          { title: "√âpisode 3: Concours Litt√©raire", filename: "maison_ecrivains_ep3.pdf" },
          { title: "√âpisode 4: L'Inspiration Collective", filename: "maison_ecrivains_ep4.pdf" },
          { title: "√âpisode 5: Publication", filename: "maison_ecrivains_ep5.pdf" }
        ]
      },
      {
        id: 4,
        title: "Chasseurs de Manuscrits",
        synopsis: "Une √©quipe de chasseurs de tr√©sors litt√©raires parcourt le monde √† la recherche d'≈ìuvres perdues d'auteurs c√©l√®bres. Adventure, myst√®re et passion pour la litt√©rature s'entrem√™lent dans cette s√©rie captivante.",
        year: 2024,
        genre: "Aventure Litt√©raire",
        image: "https://images.unsplash.com/photo-1505682499293-233fb141754c",
        episodes: [
          { title: "√âpisode 1: Le Manuscrit de Moli√®re", filename: "chasseurs_ep1.pdf" },
          { title: "√âpisode 2: Les Lettres de George Sand", filename: "chasseurs_ep2.pdf" },
          { title: "√âpisode 3: L'≈íuvre Secr√®te de Dumas", filename: "chasseurs_ep3.pdf" },
          { title: "√âpisode 4: Le Journal de Baudelaire", filename: "chasseurs_ep4.pdf" }
        ]
      }
    ],
    documentaires: [
      {
        id: 5,
        title: "L'Art de l'√âcriture",
        synopsis: "Une exploration fascinante du processus cr√©atif des grands √©crivains contemporains. De l'inspiration √† la publication, d√©couvrez les secrets, rituels et m√©thodes de travail des ma√Ætres de la litt√©rature moderne.",
        year: 2024,
        genre: "Documentaire Culturel",
        image: "https://images.unsplash.com/photo-1478720568477-152d9b164e26",
        episodes: [
          { title: "√âpisode 1: Les Rituels d'√âcriture", filename: "art_ecriture_ep1.pdf" },
          { title: "√âpisode 2: Inspiration et Blocages", filename: "art_ecriture_ep2.pdf" },
          { title: "√âpisode 3: De l'Id√©e au Livre", filename: "art_ecriture_ep3.pdf" }
        ]
      },
      {
        id: 6,
        title: "Biblioth√®ques du Monde",
        synopsis: "Un voyage √† travers les plus belles biblioth√®ques du monde, leurs histoires et les tr√©sors qu'elles renferment. Chaque √©pisode r√©v√®le l'√¢me de ces temples du savoir et les gardiens qui les pr√©servent.",
        year: 2024,
        genre: "Documentaire Voyage",
        image: "https://images.pexels.com/photos/7967591/pexels-photo-7967591.jpeg",
        episodes: [
          { title: "√âpisode 1: Trinity College Dublin", filename: "bibliotheques_ep1.pdf" },
          { title: "√âpisode 2: Biblioth√®que Sainte-Genevi√®ve", filename: "bibliotheques_ep2.pdf" },
          { title: "√âpisode 3: New York Public Library", filename: "bibliotheques_ep3.pdf" }
        ]
      }
    ]
  };

  const handleCategoryClick = (category) => {
    setSelectedCategory(category);
    setCurrentView('category');
    setSelectedWork(null);
  };

  const handleWorkClick = (work) => {
    setSelectedWork(work);
    setCurrentView('work');
  };

  const handleBackToHome = () => {
    setCurrentView('home');
    setSelectedCategory(null);
    setSelectedWork(null);
  };

  const handleBackToCategory = () => {
    setCurrentView('category');
    setSelectedWork(null);
  };

  const handleDownloadPDF = (filename) => {
    // For now, show an alert. Later this will download from /pdfs/ folder
    alert(`T√©l√©chargement de ${filename}\n\nPour ajouter vos PDFs :\n1. Cr√©ez un dossier 'pdfs' dans votre projet\n2. Ajoutez vos fichiers PDF\n3. Le t√©l√©chargement fonctionnera automatiquement !`);
  };

  const renderHome = () => (
    <div className="home-container">
      <div className="hero-section">
        <div className="hero-content">
          <h1 className="hero-title">RomanScript</h1>
          <p className="hero-subtitle">
            Pour les passionn√©s d'√©criture et de lecture
          </p>
          <div className="author-info">
            <h3>Alex Moreau</h3>
            <p>Sc√©nariste & Conteur</p>
          </div>
        </div>
        <div className="hero-image">
          <img src="https://images.unsplash.com/photo-1505682499293-233fb141754c" alt="√âcriture cr√©ative" />
          <div className="hero-overlay">
            <div className="stats">
              <div className="stat-item">
                <span className="stat-number">12+</span>
                <span className="stat-label">Projets</span>
              </div>
              <div className="stat-item">
                <span className="stat-number">3</span>
                <span className="stat-label">Cat√©gories</span>
              </div>
            </div>
          </div>
        </div>
      </div>

      <div className="categories-section">
        <h2 className="section-title">Explorez nos Cr√©ations</h2>
        <p className="section-subtitle">D√©couvrez des histoires captivantes dans chaque cat√©gorie</p>
        
        <div className="categories-grid">
          <div className="category-card" onClick={() => handleCategoryClick('films')}>
            <div className="category-icon">üé¨</div>
            <h3>Films</h3>
            <p>{screenplays.films.length} sc√©narios cin√©matographiques</p>
            <div className="category-preview">
              {screenplays.films.slice(0, 2).map(film => (
                <span key={film.id} className="preview-title">{film.title}</span>
              ))}
            </div>
          </div>
          
          <div className="category-card" onClick={() => handleCategoryClick('series')}>
            <div className="category-icon">üì∫</div>
            <h3>S√©ries</h3>
            <p>{screenplays.series.length} s√©ries compl√®tes</p>
            <div className="category-preview">
              {screenplays.series.slice(0, 2).map(series => (
                <span key={series.id} className="preview-title">{series.title}</span>
              ))}
            </div>
          </div>
          
          <div className="category-card" onClick={() => handleCategoryClick('documentaires')}>
            <div className="category-icon">üé•</div>
            <h3>Documentaires</h3>
            <p>{screenplays.documentaires.length} documentaires immersifs</p>
            <div className="category-preview">
              {screenplays.documentaires.slice(0, 2).map(doc => (
                <span key={doc.id} className="preview-title">{doc.title}</span>
              ))}
            </div>
          </div>
        </div>
      </div>

      <div className="about-section">
        <div className="about-content">
          <h2>√Ä Propos de RomanScript</h2>
          <p>
            Bienvenue dans l'univers cr√©atif d'Alex Moreau, o√π chaque histoire prend vie √† travers 
            des sc√©narios soigneusement √©labor√©s. De la fantaisie romantique aux documentaires culturels, 
            d√©couvrez une collection diverse d'≈ìuvres qui explorent la condition humaine et l'art de raconter.
          </p>
        </div>
      </div>
    </div>
  );

  const renderCategory = () => {
    const works = screenplays[selectedCategory] || [];
    const categoryTitle = selectedCategory === 'films' ? 'Films' : 
                         selectedCategory === 'series' ? 'S√©ries' : 'Documentaires';

    return (
      <div className="category-container">
        <div className="category-header">
          <button className="back-button" onClick={handleBackToHome}>
            ‚Üê Retour √† l'accueil
          </button>
          <div className="category-title-section">
            <h1 className="category-title">{categoryTitle}</h1>
            <p className="category-description">
              {selectedCategory === 'films' && "Des histoires cin√©matographiques captivantes"}
              {selectedCategory === 'series' && "Des s√©ries compl√®tes pour l'√©cran"}
              {selectedCategory === 'documentaires' && "Des documentaires qui explorent et inspirent"}
            </p>
          </div>
        </div>

        <div className="works-grid">
          {works.map(work => (
            <div key={work.id} className="work-card" onClick={() => handleWorkClick(work)}>
              <div className="work-image">
                <img src={work.image} alt={work.title} />
                <div className="work-overlay">
                  <button className="read-button">üìñ Lire</button>
                </div>
              </div>
              <div className="work-info">
                <h3 className="work-title">{work.title}</h3>
                <div className="work-meta">
                  <span className="work-year">{work.year}</span>
                  <span className="work-genre">{work.genre}</span>
                </div>
                <p className="work-synopsis">{work.synopsis}</p>
                <div className="work-stats">
                  <span className="episodes-count">
                    {work.episodes.length} {work.episodes.length === 1 ? 'chapitre' : 'chapitres'}
                  </span>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    );
  };

  const renderWork = () => {
    if (!selectedWork) return null;

    return (
      <div className="work-detail-container">
        <div className="work-detail-header">
          <button className="back-button" onClick={handleBackToCategory}>
            ‚Üê Retour aux {selectedCategory}
          </button>
        </div>

        <div className="work-detail-content">
          <div className="work-detail-image">
            <img src={selectedWork.image} alt={selectedWork.title} />
            <div className="work-stats-overlay">
              <div className="stat-badge">{selectedWork.episodes.length} Chapitres</div>
              <div className="stat-badge">{selectedWork.year}</div>
            </div>
          </div>
          
          <div className="work-detail-info">
            <h1 className="work-detail-title">{selectedWork.title}</h1>
            <div className="work-detail-meta">
              <span className="badge genre-badge">{selectedWork.genre}</span>
              <span className="badge year-badge">{selectedWork.year}</span>
            </div>
            <p className="work-detail-synopsis">{selectedWork.synopsis}</p>
            
            <div className="episodes-section">
              <h3 className="episodes-title">
                {selectedCategory === 'films' ? 'Sc√©nario' : 'Chapitres & √âpisodes'}
              </h3>
              <div className="episodes-list">
                {selectedWork.episodes.map((episode, index) => (
                  <div key={index} className="episode-item">
                    <div className="episode-info">
                      <div className="episode-number">
                        {selectedCategory !== 'films' ? `${index + 1}.` : 'üìÑ'}
                      </div>
                      <div className="episode-details">
                        <h4 className="episode-title">{episode.title}</h4>
                        <p className="episode-meta">PDF ‚Ä¢ Pr√™t √† t√©l√©charger</p>
                      </div>
                    </div>
                    <button 
                      className="download-button"
                      onClick={() => handleDownloadPDF(episode.filename)}
                    >
                      ‚¨áÔ∏è T√©l√©charger
                    </button>
                  </div>
                ))}
              </div>
            </div>
          </div>
        </div>
      </div>
    );
  };

  return (
    <div className="app">
      <nav className="navbar">
        <div className="nav-content">
          <h1 className="nav-logo" onClick={handleBackToHome}>
            RomanScript
          </h1>
          <div className="nav-links">
            <button 
              className={currentView === 'home' ? 'nav-link active' : 'nav-link'}
              onClick={handleBackToHome}
            >
              Accueil
            </button>
            <button 
              className={selectedCategory === 'films' ? 'nav-link active' : 'nav-link'}
              onClick={() => handleCategoryClick('films')}
            >
              Films
            </button>
            <button 
              className={selectedCategory === 'series' ? 'nav-link active' : 'nav-link'}
              onClick={() => handleCategoryClick('series')}
            >
              S√©ries
            </button>
            <button 
              className={selectedCategory === 'documentaires' ? 'nav-link active' : 'nav-link'}
              onClick={() => handleCategoryClick('documentaires')}
            >
              Documentaires
            </button>
          </div>
        </div>
      </nav>

      <main className="main-content">
        {currentView === 'home' && renderHome()}
        {currentView === 'category' && renderCategory()}
        {currentView === 'work' && renderWork()}
      </main>

      <footer className="footer">
        <div className="footer-content">
          <div className="footer-section">
            <h3>RomanScript</h3>
            <p>Pour les passionn√©s d'√©criture et de lecture</p>
          </div>
          <div className="footer-section">
            <h4>Contact</h4>
            <p>Alex Moreau - Sc√©nariste</p>
            <p>alex@romanscript.com</p>
          </div>
          <div className="footer-section">
            <h4>Cat√©gories</h4>
            <button onClick={() => handleCategoryClick('films')}>Films</button>
            <button onClick={() => handleCategoryClick('series')}>S√©ries</button>
            <button onClick={() => handleCategoryClick('documentaires')}>Documentaires</button>
          </div>
        </div>
        <div className="footer-bottom">
          <p>&copy; 2024 RomanScript. Tous droits r√©serv√©s.</p>
        </div>
      </footer>
    </div>
  );
};

export default App;


